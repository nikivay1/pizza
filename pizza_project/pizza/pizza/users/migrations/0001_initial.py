# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-07-04 05:48
from __future__ import unicode_literals

import core.utils
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import users.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, unique=True, verbose_name='phone')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('surname', models.CharField(default='', max_length=64, verbose_name='surname')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', users.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PhoneVerification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session', models.CharField(editable=False, max_length=512, verbose_name='session key')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, verbose_name='phone')),
                ('status', models.SmallIntegerField(choices=[(1, 'wait'), (2, 'confirmed'), (3, 'использован'), (4, 'отменен')], default=1, editable=False, verbose_name='status')),
                ('token', models.CharField(db_index=True, default=core.utils.generate_key, max_length=512, verbose_name='token')),
                ('sms_code', models.CharField(default=core.utils.generate_number_code, max_length=16, verbose_name='sms code')),
                ('sms_code_attempts', models.IntegerField(default=0, verbose_name='failed attempts')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'подтверждение номера телефона',
                'verbose_name_plural': 'подтверждения номеров телефонов',
            },
        ),
        migrations.AlterUniqueTogether(
            name='phoneverification',
            unique_together=set([('status', 'token')]),
        ),
    ]
